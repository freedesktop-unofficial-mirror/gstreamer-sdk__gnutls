@node gnutls-cli Invocation
@section Invoking gnutls-cli
@pindex gnutls-cli
@cindex GnuTLS client
@ignore
#  -*- buffer-read-only: t -*- vi: set ro:
# 
# DO NOT EDIT THIS FILE   (invoke-gnutls-cli.texi)
# 
# It has been AutoGen-ed  February 19, 2012 at 11:22:29 PM by AutoGen 5.15pre10
# From the definitions    ../src/cli-args.def
# and the template file   agtexi-cmd.tpl
@end ignore


Simple client program to set up a TLS connection to some other computer. 
It sets up a TLS connection and forwards data from the standard input to the secured socket and vice versa.

This section was generated by @strong{AutoGen},
using the @code{agtexi-cmd} template and the option descriptions for the @code{gnutls-cli} program.
This software is released under the GNU General Public License, version 3 or later.


@subheading gnutls-cli usage (-h)
@cindex gnutls-cli usage

This is the automatically generated usage text for gnutls-cli:

@exampleindent 0
@example
gnutls-cli - GnuTLS client - Ver. @@VERSION@@
USAGE:  gnutls-cli [ -<flag> [<val>] | --<name>[@{=| @}<val>] ]... [hostname]

   -d, --debug=num            Enable debugging.
                                - It must be in the range:
                                  0 to 9999
   -V, --verbose              More verbose output
                                - may appear multiple times
       --tofu                 Enable trust on first use (SSH-style) authentication
                                - disabled as --no-tofu
       --ocsp                 Enable OCSP certificate verification
                                - disabled as --no-ocsp
   -r, --resume               Connect, establish a session, reconnect and resume
   -e, --rehandshake          Connect, establish a session and rehandshake immediately
       --noticket             Don't accept session tickets
   -s, --starttls             Connect, establish a plain session and start TLS.
   -u, --udp                  Use DTLS (datagram TLS) over UDP
       --mtu=num              Set MTU for datagram TLS
                                - It must be in the range:
                                  0 to 17000
       --crlf                 Send CR LF instead of LF
       --x509fmtder           Use DER format for certificates to read from
   -f, --fingerprint          Send the openpgp fingerprint, instead of the key
       --disable-extensions   Disable all the TLS extensions
       --print-cert           Print peer's certificate in PEM format
       --recordsize=num       The maximum record size to advertize
                                - It must be in the range:
                                  0 to 4096
       --priority=str         Priorities string
       --x509cafile=str       Certificate file or PKCS #11 URL to use
       --x509crlfile=file     CRL file to use
                                - file must pre-exist
       --pgpkeyfile=file      PGP Key file to use
                                - file must pre-exist
       --pgpkeyring=file      PGP Key ring file to use
                                - file must pre-exist
       --pgpcertfile=file     PGP Public Key (certificate) file to use
                                - file must pre-exist
       --x509keyfile=str      X.509 key file or PKCS #11 URL to use
       --x509certfile=str     X.509 Certificate file or PKCS #11 URL to use
       --pgpsubkey=str        PGP subkey to use (hex or auto)
       --srpusername=str      SRP username to use
       --srppasswd=str        SRP password to use
       --pskusername=str      PSK username to use
       --pskkey=str           PSK key (in hex) to use
   -p, --port=str             The port or service to connect to
       --insecure             Don't abort program if server certificate can't be validated
       --benchmark-ciphers    Benchmark individual ciphers
       --benchmark-soft-ciphers  Benchmark individual software ciphers (no hw acceleration)
       --benchmark-tls        Benchmark ciphers and key exchange methods in TLS
   -l, --list                 Print a list of the supported algorithms and modes
   -v, --version[=arg]        Output version information and exit
   -h, --help                 Display extended usage information and exit
   -!, --more-help            Extended usage information passed thru pager

Options are specified by doubled hyphens and their name or by a single
hyphen and the flag character.
Operands and options may be intermixed.  They will be reordered.



Simple client program to set up a TLS connection to some other computer.
It sets up a TLS connection and forwards data from the standard input
to the secured socket and vice versa.

please send bug reports to:  bug-gnutls@@gnu.org
@end example
@exampleindent 4

@subheading benchmark-ciphers option
@cindex gnutls-cli-benchmark-ciphers

This is the ``benchmark individual ciphers'' option.


@subheading benchmark-soft-ciphers option
@cindex gnutls-cli-benchmark-soft-ciphers

This is the ``benchmark individual software ciphers (no hw acceleration)'' option.


@subheading benchmark-tls option
@cindex gnutls-cli-benchmark-tls

This is the ``benchmark ciphers and key exchange methods in tls'' option.


@subheading crlf option
@cindex gnutls-cli-crlf

This is the ``send cr lf instead of lf'' option.


@subheading debug option (-d)
@cindex gnutls-cli-debug

This is the ``enable debugging.'' option.
Specifies the debug level.

@subheading disable-extensions option
@cindex gnutls-cli-disable-extensions

This is the ``disable all the tls extensions'' option.


@subheading fingerprint option (-f)
@cindex gnutls-cli-fingerprint

This is the ``send the openpgp fingerprint, instead of the key'' option.


@subheading insecure option
@cindex gnutls-cli-insecure

This is the ``don't abort program if server certificate can't be validated'' option.


@subheading list option (-l)
@cindex gnutls-cli-list

This is the ``print a list of the supported algorithms and modes'' option.
Print a list of the supported algorithms and modes. If a priority string is given then only the enabled ciphersuites are shown.

@subheading mtu option
@cindex gnutls-cli-mtu

This is the ``set mtu for datagram tls'' option.


@subheading noticket option
@cindex gnutls-cli-noticket

This is the ``don't accept session tickets'' option.


@subheading ocsp option
@cindex gnutls-cli-ocsp

This is the ``enable ocsp certificate verification'' option.
This option will enable verification of the peer's certificate using ocsp

@subheading pgpcertfile option
@cindex gnutls-cli-pgpcertfile

This is the ``pgp public key (certificate) file to use'' option.


@subheading pgpkeyfile option
@cindex gnutls-cli-pgpkeyfile

This is the ``pgp key file to use'' option.


@subheading pgpkeyring option
@cindex gnutls-cli-pgpkeyring

This is the ``pgp key ring file to use'' option.


@subheading pgpsubkey option
@cindex gnutls-cli-pgpsubkey

This is the ``pgp subkey to use (hex or auto)'' option.


@subheading port option (-p)
@cindex gnutls-cli-port

This is the ``the port or service to connect to'' option.


@subheading print-cert option
@cindex gnutls-cli-print-cert

This is the ``print peer's certificate in pem format'' option.


@subheading priority option
@cindex gnutls-cli-priority

This is the ``priorities string'' option.
TLS algorithms and protocols to enable. You can
use predefined sets of ciphersuites such as PERFORMANCE,
NORMAL, SECURE128, SECURE256.

Check  the  GnuTLS  manual  on  section  ``Priority strings'' for more
information on allowed keywords

@subheading pskkey option
@cindex gnutls-cli-pskkey

This is the ``psk key (in hex) to use'' option.


@subheading pskusername option
@cindex gnutls-cli-pskusername

This is the ``psk username to use'' option.


@subheading recordsize option
@cindex gnutls-cli-recordsize

This is the ``the maximum record size to advertize'' option.


@subheading rehandshake option (-e)
@cindex gnutls-cli-rehandshake

This is the ``connect, establish a session and rehandshake immediately'' option.


@subheading resume option (-r)
@cindex gnutls-cli-resume

This is the ``connect, establish a session, reconnect and resume'' option.


@subheading srppasswd option
@cindex gnutls-cli-srppasswd

This is the ``srp password to use'' option.


@subheading srpusername option
@cindex gnutls-cli-srpusername

This is the ``srp username to use'' option.


@subheading starttls option (-s)
@cindex gnutls-cli-starttls

This is the ``connect, establish a plain session and start tls.'' option.
The TLS session will be initiated when EOF or a SIGALRM is received.

@subheading tofu option
@cindex gnutls-cli-tofu

This is the ``enable trust on first use (ssh-style) authentication'' option.
This option will, in addition to certificate authentication, perform authentication based on previously seen public keys.

@subheading udp option (-u)
@cindex gnutls-cli-udp

This is the ``use dtls (datagram tls) over udp'' option.


@subheading verbose option (-V)
@cindex gnutls-cli-verbose

This is the ``more verbose output'' option.

This option has some usage constraints.  It:
@itemize @bullet
@item
may appear an unlimited number of times.
@end itemize



@subheading x509cafile option
@cindex gnutls-cli-x509cafile

This is the ``certificate file or pkcs #11 url to use'' option.


@subheading x509certfile option
@cindex gnutls-cli-x509certfile

This is the ``x.509 certificate file or pkcs #11 url to use'' option.


@subheading x509crlfile option
@cindex gnutls-cli-x509crlfile

This is the ``crl file to use'' option.


@subheading x509fmtder option
@cindex gnutls-cli-x509fmtder

This is the ``use der format for certificates to read from'' option.


@subheading x509keyfile option
@cindex gnutls-cli-x509keyfile

This is the ``x.509 key file or pkcs #11 url to use'' option.

@subheading gnutls-cli exit status

One of the following exit values will be returned:
@table @samp
@item 0
Successful program execution.
@item 1
The operation failed or the command syntax was not valid.
@end table


@subheading gnutls-cli See Also

gnutls-cli-debug(1), gnutls-serv(1)


@subheading gnutls-cli Examples

@subheading Connecting using PSK authentication
To connect to a server using PSK authentication, you need to enable the choice of PSK by using a cipher priority parameter such as in the example below. 
@example
$ ./gnutls-cli -p 5556 localhost --pskusername psk_identity \
    --pskkey 88f3824b3e5659f52d00e959bacab954b6540344 \
    --priority NORMAL:-KX-ALL:+ECDHE-PSK:+DHE-PSK:+PSK
Resolving 'localhost'...
Connecting to '127.0.0.1:5556'...
- PSK authentication.
- Version: TLS1.1
- Key Exchange: PSK
- Cipher: AES-128-CBC
- MAC: SHA1
- Compression: NULL
- Handshake was completed
    
- Simple Client Mode:
@end example
By keeping the --pskusername parameter and removing the --pskkey parameter, it will query only for the password during the handshake. 

@subheading Listing ciphersuites in a priority string
To list the ciphersuites in a priority string:
@example
$ ./gnutls-cli --priority SECURE192 -l
Cipher suites for SECURE192
TLS_ECDHE_ECDSA_AES_256_CBC_SHA384         0xc0, 0x24	TLS1.2
TLS_ECDHE_ECDSA_AES_256_GCM_SHA384         0xc0, 0x2e	TLS1.2
TLS_ECDHE_RSA_AES_256_GCM_SHA384           0xc0, 0x30	TLS1.2
TLS_DHE_RSA_AES_256_CBC_SHA256             0x00, 0x6b	TLS1.2
TLS_DHE_DSS_AES_256_CBC_SHA256             0x00, 0x6a	TLS1.2
TLS_RSA_AES_256_CBC_SHA256                 0x00, 0x3d	TLS1.2

Certificate types: CTYPE-X.509
Protocols: VERS-TLS1.2, VERS-TLS1.1, VERS-TLS1.0, VERS-SSL3.0, VERS-DTLS1.0
Compression: COMP-NULL
Elliptic curves: CURVE-SECP384R1, CURVE-SECP521R1
PK-signatures: SIGN-RSA-SHA384, SIGN-ECDSA-SHA384, SIGN-RSA-SHA512, SIGN-ECDSA-SHA512
@end example

